import { State } from "../data";
import { Buffs } from "../other";

export declare class Game_BattlerBase {
  constructor();
  // TODO: 必要になったらちゃんと設定する
  public initMembers(): unknown;
  public clearParamPlus(): unknown;
  public clearStates(): unknown;
  public eraseState(stateId: unknown): unknown;
  public isStateAffected(stateId: unknown): unknown;
  public isDeathStateAffected(): unknown;
  public deathStateId(): unknown;
  public resetStateCounts(stateId: unknown): unknown;
  public isStateExpired(stateId: unknown): unknown;
  public updateStateTurns(): unknown;
  public clearBuffs(): unknown;
  public eraseBuff(paramId: unknown): unknown;
  public buffLength(): unknown;
  public buff(paramId: unknown): unknown;
  public isBuffAffected(paramId: unknown): unknown;
  public isDebuffAffected(paramId: unknown): unknown;
  public isBuffOrDebuffAffected(paramId: unknown): unknown;
  public isMaxBuffAffected(paramId: unknown): unknown;
  public isMaxDebuffAffected(paramId: unknown): unknown;
  public increaseBuff(paramId: unknown): unknown;
  public decreaseBuff(paramId: unknown): unknown;
  public overwriteBuffTurns(paramId: unknown, turns: unknown): unknown;
  public isBuffExpired(paramId: unknown): unknown;
  public updateBuffTurns(): unknown;
  public die(): unknown;
  public revive(): unknown;
  public states(): unknown;
  public stateIcons(): unknown;
  public buffIcons(): unknown;
  public buffIconIndex(buffLevel: unknown, paramId: unknown): unknown;
  public allIcons(): unknown;
  public traitObjects(): unknown;
  public allTraits(): unknown;
  public traits(code: unknown): unknown;
  public traitsWithId(code: unknown, id: unknown): unknown;
  public traitsPi(code: unknown, id: unknown): unknown;
  public traitsSum(code: unknown, id: unknown): unknown;
  public traitsSumAll(code: unknown): unknown;
  public traitsSet(code: unknown): unknown;
  public paramBase(paramId: unknown): unknown;
  public paramPlus(paramId: unknown): unknown;
  public paramMin(paramId: unknown): unknown;
  public paramMax(paramId: unknown): unknown;
  public paramRate(paramId: unknown): unknown;
  public paramBuffRate(paramId: unknown): unknown;
  public param(paramId: unknown): unknown;
  public xparam(xparamId: unknown): unknown;
  public sparam(sparamId: unknown): unknown;
  public elementRate(elementId: unknown): unknown;
  public debuffRate(paramId: unknown): unknown;
  public stateRate(stateId: unknown): unknown;
  public stateResistSet(): unknown;
  public isStateResist(stateId: unknown): unknown;
  public attackElements(): unknown;
  public attackStates(): unknown;
  public attackStatesRate(stateId: unknown): unknown;
  public attackSpeed(): unknown;
  public attackTimesAdd(): unknown;
  public addedSkillTypes(): unknown;
  public isSkillTypeSealed(stypeId: unknown): unknown;
  public addedSkills(): unknown;
  public isSkillSealed(skillId: unknown): unknown;
  public isEquipWtypeOk(wtypeId: unknown): unknown;
  public isEquipAtypeOk(atypeId: unknown): unknown;
  public isEquipTypeLocked(etypeId: unknown): unknown;
  public isEquipTypeSealed(etypeId: unknown): unknown;
  public slotType(): unknown;
  public isDualWield(): unknown;
  public actionPlusSet(): unknown;
  public specialFlag(flagId: unknown): unknown;
  public collapseType(): unknown;
  public partyAbility(abilityId: unknown): unknown;
  public isAutoBattle(): unknown;
  public isGuard(): unknown;
  public isSubstitute(): unknown;
  public isPreserveTp(): unknown;
  public addParam(paramId: unknown, value: unknown): unknown;
  public setHp(hp: unknown): unknown;
  public setMp(mp: unknown): unknown;
  public setTp(tp: unknown): unknown;
  public maxTp(): unknown;
  public refresh(): unknown;
  public recoverAll(): unknown;
  public hpRate(): unknown;
  public mpRate(): unknown;
  public tpRate(): unknown;
  public hide(): unknown;
  public appear(): unknown;
  public isHidden(): unknown;
  public isAppeared(): unknown;
  public isDead(): unknown;
  public isAlive(): unknown;
  public isDying(): unknown;
  public isRestricted(): unknown;
  public canInput(): unknown;
  public canMove(): unknown;
  public isConfused(): unknown;
  public confusionLevel(): unknown;
  public isActor(): unknown;
  public isEnemy(): unknown;
  public sortStates(): unknown;
  public restriction(): unknown;
  public addNewState(stateId: unknown): unknown;
  public onRestrict(): unknown;
  public mostImportantStateText(): unknown;
  public stateMotionIndex(): unknown;
  public stateOverlayIndex(): unknown;
  public isSkillWtypeOk(skill: unknown): unknown;
  public skillMpCost(skill: unknown): unknown;
  public skillTpCost(skill: unknown): unknown;
  public canPaySkillCost(skill: unknown): unknown;
  public paySkillCost(skill: unknown): unknown;
  public isOccasionOk(item: unknown): unknown;
  public meetsUsableItemConditions(item: unknown): unknown;
  public meetsSkillConditions(skill: unknown): unknown;
  public meetsItemConditions(item: unknown): unknown;
  public canUse(item: unknown): unknown;
  public canEquip(item: unknown): unknown;
  public canEquipWeapon(item: unknown): unknown;
  public canEquipArmor(item: unknown): unknown;
  public attackSkillId(): unknown;
  public guardSkillId(): unknown;
  public canAttack(): unknown;
  public canGuard(): unknown;

  static FLAG_ID_AUTO_BATTLE: 0;
  static FLAG_ID_GUARD: 1;
  static FLAG_ID_PRESERVE_TP: 3;
  static FLAG_ID_SUBSTITUTE: 2;
  static ICON_BUFF_START: 2;
  static ICON_DEBUFF_START: 8;
  static TRAIT_ACTION_PLUS: 1;
  static TRAIT_ATTACK_ELEMENT: 1;
  static TRAIT_ATTACK_SPEED: 3;
  static TRAIT_ATTACK_STATE: 2;
  static TRAIT_ATTACK_TIMES: 4;
  static TRAIT_COLLAPSE_TYPE: 3;
  static TRAIT_DEBUFF_RATE: 2;
  static TRAIT_ELEMENT_RATE: 1;
  static TRAIT_EQUIP_ATYPE: 2;
  static TRAIT_EQUIP_LOCK: 3;
  static TRAIT_EQUIP_SEAL: 4;
  static TRAIT_EQUIP_WTYPE: 1;
  static TRAIT_PARAM: 1;
  static TRAIT_PARTY_ABILITY: 4;
  static TRAIT_SKILL_ADD: 3;
  static TRAIT_SKILL_SEAL: 4;
  static TRAIT_SLOT_TYPE: 5;
  static TRAIT_SPARAM: 3;
  static TRAIT_SPECIAL_FLAG: 2;
  static TRAIT_STATE_RATE: 3;
  static TRAIT_STATE_RESIST: 4;
  static TRAIT_STYPE_ADD: 1;
  static TRAIT_STYPE_SEAL: 2;
  static TRAIT_XPARAM: 2;
  public _buffTurns: Buffs;
  public _buffs: Buffs;
  public _hidden: boolean;
  public _hp: number;
  public _mp: number;
  public _stateTurns: { [stateId: number]: number };
  public _states: State[];
  public _tp: number;
}
